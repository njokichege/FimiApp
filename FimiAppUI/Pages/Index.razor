@page "/"

@inject IStudentData _db;

<PageTitle>Index</PageTitle>

<h1>Hello, world!</h1>

Welcome to your new app.

<h4>Insert new Person</h4>

<EditForm Model="@newStudent"OnValidSubmit="@InsertStudent">
    <DataAnnotationsValidator/>
    <ValidationSummary/>

    <InputText id="firstName"@bind-Value="newStudent.FirstName"/>
    <InputText id="middleName"@bind-Value="newStudent.MiddleName"/>
    <InputText id="surname"@bind-Value="newStudent.Surname"/>

    <button type="submit" class="btn btn-primary">Submit</button>

</EditForm>

@if (students is null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Student Number</th>
                <th>First Name</th>
                <th>Middle Name</th>
                <th>Surname</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var student in students)
            {
                <tr>
                    <td>@student.StudentNumber</td>
                    <td>@student.FirstName</td>
                    <td>@student.MiddleName</td>
                    <td>@student.Surname</td>
                </tr>
            }
        </tbody>
    </table>
}
@code {
    private List<StudentModel> students;
    private DisplayStudentModel newStudent = new DisplayStudentModel();

    protected override async Task OnInitializedAsync()
    {
        students = await _db.GetStudent();

    }
    private async Task InsertStudent()
    {
        StudentModel studentModel = new StudentModel
            {
                FirstName = newStudent.FirstName,
                MiddleName = newStudent.MiddleName,
                Surname = newStudent.Surname
            };
        await _db.InsertStudent(studentModel);
        students.Add(studentModel);
        newStudent = new DisplayStudentModel();
    }
}


