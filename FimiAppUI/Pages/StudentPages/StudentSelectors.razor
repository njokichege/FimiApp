
@inject ISessionYearData _isessionDb;

@if (!SessionList.Any())
{
    @LoadingContent
}
else
{
    <label>View Students</label>
    <MudCard>
        <MudForm onchange="HandleFormInput">
            <MudCardContent>
                <MudSelect T="double" Label="Session Year" Variant="Variant.Outlined" AnchorOrigin="Origin.BottomCenter">
                    @foreach (SessionYearModel sessionYear in SessionList)
                    {
                        <MudSelectItem T="string" Value="sessionYear.SessionYear" />
                    }
                </MudSelect>
            </MudCardContent>
        </MudForm>
    </MudCard>
}
@code
{
    [Parameter] public IEnumerable<SessionYearModel> SessionList { get; set; } = Enumerable.Empty<SessionYearModel>();
    [Parameter] public EventCallback<SessionYearModel> OnFormChanged { get; set; }
    [Parameter] public RenderFragment LoadingContent { get; set; }

    private async Task HandleFormInput(ChangeEventArgs args)
    {
        if (OnFormChanged.HasDelegate)
        {
            if (args is not null)
            {
                var selectedSession = SessionList.FirstOrDefault(a => a.SessionYear.Equals(args.ToString());
                if (selectedSession is not null)
                {
                    await OnFormChanged.InvokeAsync(selectedSession);
                }
            }
        }
    }
}